<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.30.0@d0bc6e25d89f649e4f36a534f330f8bb4643dd69">
  <file src="src/Factory/StreamFactory.php">
    <DocblockTypeContradiction occurrences="1">
      <code>! is_resource($resource)</code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Message/AbstractRequest.php">
    <MixedInferredReturnType occurrences="1">
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;requestTarget</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Message/Request.php">
    <MismatchingDocblockParamType occurrences="1">
      <code>resource|StreamInterface|string</code>
    </MismatchingDocblockParamType>
  </file>
  <file src="src/Message/Response.php">
    <MissingConstructor occurrences="2">
      <code>$code</code>
      <code>$reasonPhrase</code>
    </MissingConstructor>
  </file>
  <file src="src/Message/Uri.php">
    <UnusedPsalmSuppress occurrences="1">
      <code>MixedArgument</code>
    </UnusedPsalmSuppress>
  </file>
  <file src="tests/Unit/Message/UriTest.php">
    <InvalidArgument occurrences="3">
      <code>testConstructWithUnsupportedSchemeRaisesAnException</code>
      <code>testMutatingWithUnsupportedSchemeRaisesAnException</code>
      <code>testWithQueryRaisesExceptionForInvalidQueryStrings</code>
    </InvalidArgument>
    <InvalidReturnType occurrences="2">
      <code>iterable&lt;string, array{iterable}&gt;</code>
      <code>iterable&lt;string, array{iterable}&gt;</code>
    </InvalidReturnType>
    <MismatchingDocblockReturnType occurrences="1">
      <code>iterable&lt;string, array{string}&gt;</code>
    </MismatchingDocblockReturnType>
    <MixedArgument occurrences="1">
      <code>$test</code>
    </MixedArgument>
    <MixedAssignment occurrences="5">
      <code>$new</code>
      <code>$new</code>
      <code>$new</code>
      <code>$new</code>
      <code>$test</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>iterable&lt;array{string, string}&gt;</code>
      <code>iterable&lt;string, array{string}&gt;</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="11">
      <code>getQuery</code>
      <code>getUserInfo</code>
      <code>getUserInfo</code>
      <code>getUserInfo</code>
      <code>withPath</code>
      <code>withPort</code>
      <code>withQuery</code>
      <code>withQuery</code>
      <code>withUserInfo</code>
      <code>withUserInfo</code>
      <code>withUserInfo</code>
    </MixedMethodCall>
    <PossiblyInvalidArgument occurrences="3">
      <code>test0Query</code>
      <code>testFragment</code>
      <code>testPath</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument occurrences="1">
      <code>$port</code>
    </PossiblyNullArgument>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;uri</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="7">
      <code>$this-&gt;uri</code>
      <code>$this-&gt;uri</code>
      <code>$this-&gt;uri</code>
      <code>$this-&gt;uri</code>
      <code>$this-&gt;uri</code>
      <code>$this-&gt;uri</code>
      <code>$this-&gt;uri</code>
    </UndefinedThisPropertyFetch>
    <UnusedPsalmSuppress occurrences="1">
      <code>MixedArgument</code>
    </UnusedPsalmSuppress>
  </file>
</files>
